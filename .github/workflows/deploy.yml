name: Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: Choose deploy environment

jobs:
  deploy-by-trigger:
    name: Release to production
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Deploy Workflow
        uses: actions/github-script@v4
        with:
          script: |
            const { data: { id: runId } } = await github.actions.createWorkflowDispatch({
              owner: '${{ secrets.GH_DEPLOY_OWNER }}',
              repo: '${{ secrets.GH_DEPLOY_REPO }}',
              workflow_id: '${{ secrets.GH_DEPLOY_WORKFLOW }}',
              ref: 'main',
              inputs: {
                environment: '${{ inputs.environment }}'
              }
            });

            core.setOutput('runId', runId);

      - name: Wait for Deploy Workflow to Complete
        id: wait-for-deploy
        run: |
          gh run watch ${{ steps.trigger.outputs.runId }}

      - name: Get databaseId
        id: get-database-id
        run: |
          databaseId=$(gh run list -w ${{ secrets.GH_DEPLOY_WORKFLOW }} --repo ${{ secrets.GH_DEPLOY_REPO }} --json databaseId --limit 1 | jq -r '.[0].databaseId')
          echo "::set-output name=databaseId::$databaseId"

      - name: Deploy Completed
        run: |
          echo "Deployment completed! The databaseId is ${{ steps.get-database-id.outputs.databaseId }}"
